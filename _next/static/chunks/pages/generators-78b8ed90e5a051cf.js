(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[519],{6701:function(n,s,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/generators",function(){return a(1125)}])},1125:function(n,s,a){"use strict";a.r(s),a.d(s,{__N_SSG:function(){return e}});var o=a(5893),r=a(1151);function t(n){let s=Object.assign({h1:"h1",p:"p",code:"code",h2:"h2",ul:"ul",li:"li",a:"a",pre:"pre"},(0,r.ah)(),n.components),{Note:a,CodeGroup:t}=s;return t||i("CodeGroup",!0),a||i("Note",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.h1,{children:"Generators"}),"\n",(0,o.jsx)(s.p,{children:"The tools library provides a set of custom data generator functions. These generator functions\ncan be used to produce a single data or multiple data across all pinescripts basic data types -\nstring, float, integer (including unix timestamp), boolean, color. These data can be generated\nas single entity or using pinescript's array or matrix."}),"\n",(0,o.jsx)(a,{children:(0,o.jsxs)(s.p,{children:["For all the examples in this page, ",(0,o.jsx)(s.code,{children:"tools"})," is used as a namespace for the tools library.\nIf you are following along with the examples, please make sure to import the latest\nversion of the library in your script first, and assign ",(0,o.jsx)(s.code,{children:"tools"})," as namespace."]})}),"\n",(0,o.jsx)(s.h2,{id:"strings",children:"Strings"}),"\n",(0,o.jsx)(s.p,{children:"To generate random string(s), use the following functions:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/string-generators#rndm-char",children:(0,o.jsx)(s.code,{children:"_rndmChar()"})})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/string-generators#rndm-string",children:(0,o.jsx)(s.code,{children:"_rndmString()"})})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/string-generators#rndm-word",children:(0,o.jsx)(s.code,{children:"_rndmWord()"})})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/string-generators#rndm-sentence",children:(0,o.jsx)(s.code,{children:"_rndmSentence()"})})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/string-generators#rndm-string-array",children:(0,o.jsx)(s.code,{children:"_rndmStringArray()"})})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/string-generators#rndm-char-array",children:(0,o.jsx)(s.code,{children:"_rndmCharArray()"})})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/string-generators#rndm-string-matrix",children:(0,o.jsx)(s.code,{children:"_rndmStringMatrix()"})})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/string-generators#rndm-char-matrix",children:(0,o.jsx)(s.code,{children:"_rndmCharMatrix()"})})}),"\n"]}),"\n",(0,o.jsxs)(t,{title:"Generating random string(s).",children:[(0,o.jsx)(s.pre,{language:"js",code:"tools._rndmChar()\n// returns a random a-z character.\n\ntools._rndmCharArray()        \n// returns random size array<string>, each filled with a single random a-z character.\n\ntools._rndmCharArray(size=5)     \n// returns array<string> size 5, each filled with a single random a-z character.         \n\ntools._rndmCharMatrix()   \n// returns matrix<string> with random rows and columns, each filled with single random a-z character.\n\ntools._rndmCharMatrix(rows=3, columns=4)  \n// returns 3x4 matrix<string>, each filled with a single random a-z character.\n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmChar</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns a random a-z character.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmCharArray</span><span style="color: var(--shiki-color-text)">()        </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns random size array&lt;string&gt;, each filled with a single random a-z character.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmCharArray</span><span style="color: var(--shiki-color-text)">(size</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">5</span><span style="color: var(--shiki-color-text)">)     </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns array&lt;string&gt; size 5, each filled with a single random a-z character.         </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmCharMatrix</span><span style="color: var(--shiki-color-text)">()   </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns matrix&lt;string&gt; with random rows and columns, each filled with single random a-z character.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmCharMatrix</span><span style="color: var(--shiki-color-text)">(rows</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> columns</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">4</span><span style="color: var(--shiki-color-text)">)  </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns 3x4 matrix&lt;string&gt;, each filled with a single random a-z character.</span></span>\n<span></span>'}),title:"Random character"}),(0,o.jsx)(s.pre,{language:"js",code:"tools._rndmWord()\n// returns a random word.\n\ntools._rndmWord(len=3)                    \n// returns a random word with length of 3 characters.\n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmWord</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns a random word.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmWord</span><span style="color: var(--shiki-color-text)">(len</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">)                    </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns a random word with length of 3 characters.</span></span>\n<span></span>'}),title:"Random word"}),(0,o.jsx)(s.pre,{language:"js",code:"tools._rndmSentence()\n// returns a random sentence.\n\ntools._rndmSentence(size=4) \n// returns a random sentence with a size of 4 words.                \n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmSentence</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns a random sentence.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmSentence</span><span style="color: var(--shiki-color-text)">(size</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">4</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns a random sentence with a size of 4 words.                </span></span>\n<span></span>'}),title:"Random sentence"}),(0,o.jsx)(s.pre,{language:"js",code:"tools._rndmString()                         \n// returns a random string.\n\ntools._rndmString(len=8)                   \n// returns a random string with length of 8 characters.\n\ntools._rndmStringArray()                    \n// returns random size array<string>, each filled with random length strings.\n\ntools._rndmStringArray(size=4, len=3) \n// returns array<string> size 4, each filled with fixed 3 character length string.\n\ntools._rndmStringMatrix()                   \n// returns matrix<string> with random rows and columns, each filled with random length strings.\n\ntools._rndmStringMatrix(rows=2, columns=2)  \n// returns 2x2 matrix<string>, each filled with random length strings.\n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmString</span><span style="color: var(--shiki-color-text)">()                         </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns a random string.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmString</span><span style="color: var(--shiki-color-text)">(len</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">8</span><span style="color: var(--shiki-color-text)">)                   </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns a random string with length of 8 characters.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmStringArray</span><span style="color: var(--shiki-color-text)">()                    </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns random size array&lt;string&gt;, each filled with random length strings.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmStringArray</span><span style="color: var(--shiki-color-text)">(size</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">4</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> len</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns array&lt;string&gt; size 4, each filled with fixed 3 character length string.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmStringMatrix</span><span style="color: var(--shiki-color-text)">()                   </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns matrix&lt;string&gt; with random rows and columns, each filled with random length strings.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmStringMatrix</span><span style="color: var(--shiki-color-text)">(rows</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> columns</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-color-text)">)  </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns 2x2 matrix&lt;string&gt;, each filled with random length strings.</span></span>\n<span></span>'}),title:"Random string"})]}),"\n",(0,o.jsx)(s.h2,{id:"floats",children:"Floats"}),"\n",(0,o.jsx)(s.p,{children:"To generate random float(s), use the following functions:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/float-generators#rndm-float",children:(0,o.jsx)(s.code,{children:"_rndmFloat()"})})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/float-generators#rndm-float-array",children:(0,o.jsx)(s.code,{children:"_rndmFloatArray()"})})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/float-generators#rndm-float-matrix",children:(0,o.jsx)(s.code,{children:"_rndmFloatMatrix()"})})}),"\n"]}),"\n",(0,o.jsx)(s.pre,{language:"js",code:"tools._rndmFloat()                                                    \n// returns 66.17.\n\ntools._rndmFloat(min=25, max=30, precision=5)                         \n// returns 25.01369.\n\ntools._rndmFloatArray()                                               \n// returns random size array<float>, each filled with random floats in range 0-100 with a \n// precision of 2 decimal points.\n\ntools._rndmFloatArray(size=3, min=0, max=1, precision=8)              \n// returns array<float> size 3, each filled with random floats in range 0-1 with a precision \n// of 8 decimal points.\n\ntools._rndmFloatMatrix()                                              \n// returns matrix<float> with random rows and columns, each filled with random floats in range \n// 0-100 with a precision of 2 decimal points.\n\ntools._rndmFloatMatrix(rows=4, columns=4, min=1, max=5, precision=1)  \n// returns matrix<float> with 4 by 4 rows and columns, each filled with random floats in range \n// 1-5 with a precision of 1 decimal points.\n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloat</span><span style="color: var(--shiki-color-text)">()                                                    </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns 66.17.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloat</span><span style="color: var(--shiki-color-text)">(min</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">25</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> max</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">30</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> precision</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">5</span><span style="color: var(--shiki-color-text)">)                         </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns 25.01369.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatArray</span><span style="color: var(--shiki-color-text)">()                                               </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns random size array&lt;float&gt;, each filled with random floats in range 0-100 with a </span></span>\n<span><span style="color: var(--shiki-token-comment)">// precision of 2 decimal points.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatArray</span><span style="color: var(--shiki-color-text)">(size</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> min</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> max</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> precision</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">8</span><span style="color: var(--shiki-color-text)">)              </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns array&lt;float&gt; size 3, each filled with random floats in range 0-1 with a precision </span></span>\n<span><span style="color: var(--shiki-token-comment)">// of 8 decimal points.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatMatrix</span><span style="color: var(--shiki-color-text)">()                                              </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns matrix&lt;float&gt; with random rows and columns, each filled with random floats in range </span></span>\n<span><span style="color: var(--shiki-token-comment)">// 0-100 with a precision of 2 decimal points.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatMatrix</span><span style="color: var(--shiki-color-text)">(rows</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">4</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> columns</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">4</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> min</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> max</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">5</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> precision</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)">)  </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns matrix&lt;float&gt; with 4 by 4 rows and columns, each filled with random floats in range </span></span>\n<span><span style="color: var(--shiki-token-comment)">// 1-5 with a precision of 1 decimal points.</span></span>\n<span></span>'}),title:"Generating random float(s)"}),"\n",(0,o.jsx)(s.h2,{id:"integers",children:"Integers"}),"\n",(0,o.jsx)(s.p,{children:"To generate random integer(s), use the following functions:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/int-generators#rndm-int",children:(0,o.jsx)(s.code,{children:"_rndmInt()"})})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/int-generators#rndm-int-array",children:(0,o.jsx)(s.code,{children:"_rndmIntArray()"})})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/int-generators#rndm-int-matrix",children:(0,o.jsx)(s.code,{children:"_rndmIntMatrix()"})})}),"\n"]}),"\n",(0,o.jsx)(s.pre,{language:"js",code:"tools._rndmInt()                                      \n// returns 4.\n\ntools._rndmInt(min=25, max=30)                        \n// returns 27.\n\ntools._rndmIntArray()                                 \n// returns random size array<int>, each filled with random integer in range 1-100.\n\ntools._rndmIntArray(size=3, min=-5, max=5)            \n// returns array<int> size 3, each filled with random integer in range -5-5.\n\ntools._rndmIntMatrix()                                \n// returns matrix<int> with random rows and columns, each filled with random integers in \n// range 1-100.\n\ntools._rndmIntMatrix(rows=4, columns=4, min=1, max=5) \n// returns 4x4 matrix<int>, each filled with random integers in range 1-5.\n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmInt</span><span style="color: var(--shiki-color-text)">()                                      </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns 4.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmInt</span><span style="color: var(--shiki-color-text)">(min</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">25</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> max</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">30</span><span style="color: var(--shiki-color-text)">)                        </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns 27.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmIntArray</span><span style="color: var(--shiki-color-text)">()                                 </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns random size array&lt;int&gt;, each filled with random integer in range 1-100.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmIntArray</span><span style="color: var(--shiki-color-text)">(size</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> min</span><span style="color: var(--shiki-token-keyword)">=-</span><span style="color: var(--shiki-token-constant)">5</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> max</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">5</span><span style="color: var(--shiki-color-text)">)            </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns array&lt;int&gt; size 3, each filled with random integer in range -5-5.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmIntMatrix</span><span style="color: var(--shiki-color-text)">()                                </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns matrix&lt;int&gt; with random rows and columns, each filled with random integers in </span></span>\n<span><span style="color: var(--shiki-token-comment)">// range 1-100.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmIntMatrix</span><span style="color: var(--shiki-color-text)">(rows</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">4</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> columns</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">4</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> min</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> max</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">5</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns 4x4 matrix&lt;int&gt;, each filled with random integers in range 1-5.</span></span>\n<span></span>'}),title:"Generating random integer(s)"}),"\n",(0,o.jsx)(s.h2,{id:"booleans",children:"Booleans"}),"\n",(0,o.jsx)(s.p,{children:"To generate random boolean(s), use the following functions:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/bool-generators#rndm-bool",children:(0,o.jsx)(s.code,{children:"_rndmBool()"})})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/bool-generators#rndm-bool-array",children:(0,o.jsx)(s.code,{children:"_rndmBoolArray()"})})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/bool-generators#rndm-bool-matrix",children:(0,o.jsx)(s.code,{children:"_rndmBoolMatrix()"})})}),"\n"]}),"\n",(0,o.jsx)(s.pre,{language:"js",code:"tools._rndmBool()                         \n// returns true.\n\ntools._rndmBoolArray()                    \n// returns random size array<bool>, each filled with random boolean value.\n\ntools._rndmBoolArray(size=6)              \n// returns array<bool> size 6, each filled with random boolean value.\n\ntools._rndmBoolMatrix()                   \n// returns matrix<bool> with random rows and columns, each filled with random boolean value.\n\ntools._rndmBoolMatrix(rows=2, columns=2)  \n// returns 2x2 matrix<bool>, each filled with random boolean value.\n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmBool</span><span style="color: var(--shiki-color-text)">()                         </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns true.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmBoolArray</span><span style="color: var(--shiki-color-text)">()                    </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns random size array&lt;bool&gt;, each filled with random boolean value.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmBoolArray</span><span style="color: var(--shiki-color-text)">(size</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">6</span><span style="color: var(--shiki-color-text)">)              </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns array&lt;bool&gt; size 6, each filled with random boolean value.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmBoolMatrix</span><span style="color: var(--shiki-color-text)">()                   </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns matrix&lt;bool&gt; with random rows and columns, each filled with random boolean value.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmBoolMatrix</span><span style="color: var(--shiki-color-text)">(rows</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> columns</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-color-text)">)  </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns 2x2 matrix&lt;bool&gt;, each filled with random boolean value.</span></span>\n<span></span>'}),title:"Generating random boolean(s)"}),"\n",(0,o.jsx)(s.h2,{id:"colors",children:"Colors"}),"\n",(0,o.jsx)(s.p,{children:"To generate random color(s), use the following functions:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/color-generators#rndm-color",children:(0,o.jsx)(s.code,{children:"_rndmColor()"})})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/color-generators#rndm-color-array",children:(0,o.jsx)(s.code,{children:"_rndmColorArray()"})})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/color-generators#rndm-color-matrix",children:(0,o.jsx)(s.code,{children:"_rndmColorMatrix()"})})}),"\n"]}),"\n",(0,o.jsx)(s.pre,{language:"js",code:"tools._rndmColor()                                    \n// returns color #D7AD84.\n\ntools._rndmColor(trnsp=true)                          \n// returns color #C0D88E3B.\n\ntools._rndmColorArray()                               \n// returns random size array<color>, each filled with random color value.\n\ntools._rndmColorArray(size=2, trnsp=true)             \n// returns array<color> size 2, each filled with random color value and random transparency.\n\ntools._rndmColorMatrix()                              \n// returns matrix<color> with random rows and columns, each filled with random color value and \n// random transparency.\n\ntools._rndmColorMatrix(rows=3, columns=3, trnsp=true) \n// returns 3x3 matrix<color>, each filled with random color value and random transparency.\n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmColor</span><span style="color: var(--shiki-color-text)">()                                    </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns color #D7AD84.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmColor</span><span style="color: var(--shiki-color-text)">(trnsp</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">)                          </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns color #C0D88E3B.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmColorArray</span><span style="color: var(--shiki-color-text)">()                               </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns random size array&lt;color&gt;, each filled with random color value.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmColorArray</span><span style="color: var(--shiki-color-text)">(size</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> trnsp</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">)             </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns array&lt;color&gt; size 2, each filled with random color value and random transparency.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmColorMatrix</span><span style="color: var(--shiki-color-text)">()                              </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns matrix&lt;color&gt; with random rows and columns, each filled with random color value and </span></span>\n<span><span style="color: var(--shiki-token-comment)">// random transparency.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmColorMatrix</span><span style="color: var(--shiki-color-text)">(rows</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> columns</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> trnsp</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns 3x3 matrix&lt;color&gt;, each filled with random color value and random transparency.</span></span>\n<span></span>'}),title:"Generating random color(s)"}),"\n",(0,o.jsx)(s.h2,{id:"unix-timestamps",children:"unix timestamps"}),"\n",(0,o.jsx)(s.p,{children:"To generate random unix timestamp(s), use the following functions:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/unix-timestamp-generators#rndm-timestamp",children:(0,o.jsx)(s.code,{children:"_rndmTimestamp()"})})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/unix-timestamp-generators#rndm-timestamp-array",children:(0,o.jsx)(s.code,{children:"_rndmTimestampArray()"})})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/unix-timestamp-generators#rndm-timestamp-matrix",children:(0,o.jsx)(s.code,{children:"_rndmTimestampMatrix()"})})}),"\n"]}),"\n",(0,o.jsx)(s.pre,{language:"js",code:"tools._rndmTimestamp()                                    \n// returns 303740247000.\n\ntools._rndmTimestamp(year=2016)                           \n// returns 1470434775000.\n\ntools._rndmTimestamp(year=2002, month=10)                 \n// returns 1477449509000.\n\ntools._rndmTimestamp(year=1998, month=02, day=12)         \n// returns 887328265000.\n\ntools._rndmTimestamp(day=12, hour=12, minute=30)          \n// returns 963419451000.\n\ntools._rndmTimestampArray()                               \n// returns random size array<int>, each filled with random unix timestamp.\n\ntools._rndmTimestampArray(size=2, year=2000, month=01)    \n// returns array<int> size 2, each filled with random unix timestamp with fixed year 2000 \n// and January month.\n\ntools._rndmTimestampMatrix()                              \n// returns matrix<int> with random rows and columns, each filled with random unix timestamp.\n\ntools._rndmTimestampMatrix(rows=2, columns=2, year=1999)  \n// returns 2x2 matrix<int>, each filled with random unix timestamp with fixed year 1999.\n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmTimestamp</span><span style="color: var(--shiki-color-text)">()                                    </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns 303740247000.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmTimestamp</span><span style="color: var(--shiki-color-text)">(year</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">2016</span><span style="color: var(--shiki-color-text)">)                           </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns 1470434775000.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmTimestamp</span><span style="color: var(--shiki-color-text)">(year</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">2002</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> month</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">10</span><span style="color: var(--shiki-color-text)">)                 </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns 1477449509000.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmTimestamp</span><span style="color: var(--shiki-color-text)">(year</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">1998</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> month</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">02</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> day</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">12</span><span style="color: var(--shiki-color-text)">)         </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns 887328265000.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmTimestamp</span><span style="color: var(--shiki-color-text)">(day</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">12</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> hour</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">12</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> minute</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">30</span><span style="color: var(--shiki-color-text)">)          </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns 963419451000.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmTimestampArray</span><span style="color: var(--shiki-color-text)">()                               </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns random size array&lt;int&gt;, each filled with random unix timestamp.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmTimestampArray</span><span style="color: var(--shiki-color-text)">(size</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> year</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">2000</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> month</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">01</span><span style="color: var(--shiki-color-text)">)    </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns array&lt;int&gt; size 2, each filled with random unix timestamp with fixed year 2000 </span></span>\n<span><span style="color: var(--shiki-token-comment)">// and January month.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmTimestampMatrix</span><span style="color: var(--shiki-color-text)">()                              </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns matrix&lt;int&gt; with random rows and columns, each filled with random unix timestamp.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmTimestampMatrix</span><span style="color: var(--shiki-color-text)">(rows</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> columns</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> year</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">1999</span><span style="color: var(--shiki-color-text)">)  </span></span>\n<span><span style="color: var(--shiki-token-comment)">// returns 2x2 matrix&lt;int&gt;, each filled with random unix timestamp with fixed year 1999.</span></span>\n<span></span>'}),title:"Generating random unix timestamp(s)"})]})}var e=!0;function i(n,s){throw Error("Expected "+(s?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}s.default=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,r.ah)(),n.components);return s?(0,o.jsx)(s,Object.assign({},n,{children:(0,o.jsx)(t,n)})):t(n)}}},function(n){n.O(0,[774,888,179],function(){return n(n.s=6701)}),_N_E=n.O()}]);