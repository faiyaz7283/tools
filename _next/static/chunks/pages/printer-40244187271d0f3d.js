(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[787],{4815:function(n,s,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/printer",function(){return t(3996)}])},3996:function(n,s,t){"use strict";t.r(s),t.d(s,{__N_SSG:function(){return r}});var o=t(5893),a=t(1151);function e(n){let s=Object.assign({h1:"h1",p:"p",a:"a",code:"code",pre:"pre",h2:"h2",ul:"ul",li:"li",strong:"strong",em:"em"},(0,a.ah)(),n.components),{Note:t,CodeGroup:e}=s;return e||l("CodeGroup",!0),t||l("Note",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.h1,{children:"Printer"}),"\n",(0,o.jsxs)(s.p,{children:["The ",(0,o.jsx)(s.a,{href:"/_printer#printer",children:(0,o.jsx)(s.code,{children:"_printer"})})," is designed to help print data on screen quickly and easily. Just create\na new ",(0,o.jsx)(s.a,{href:"/_printer#printer",children:(0,o.jsx)(s.code,{children:"_printer"})})," object and start printing with the ",(0,o.jsx)(s.a,{href:"/_printer#print",children:(0,o.jsx)(s.code,{children:"print()"})})," method. There are also many\nconvenient methods to easily customize and style the ",(0,o.jsx)(s.a,{href:"/_printer#printer",children:(0,o.jsx)(s.code,{children:"_printer"})}),"."]}),"\n",(0,o.jsxs)(t,{children:["Please make sure to import the ",(0,o.jsx)(s.a,{href:"https://www.tradingview.com/script/ML1hf4jk-printer",children:(0,o.jsx)(s.code,{children:"Printer"})})," library in your script, before following along with the examples."]}),"\n",(0,o.jsx)(t,{children:(0,o.jsxs)(s.p,{children:["Always create a printer under the ",(0,o.jsx)(s.a,{href:"https://www.tradingview.com/pine-script-reference/v5/#var_barstate.islast",children:(0,o.jsx)(s.code,{children:"barstate.islast"})})," condition."]})}),"\n",(0,o.jsx)(t,{children:(0,o.jsxs)(s.p,{children:["Do not use ",(0,o.jsx)(s.a,{href:"https://www.tradingview.com/pine-script-reference/v5/#op_var",children:(0,o.jsx)(s.code,{children:"var"})})," when assigning a printer to a variable."]})}),"\n",(0,o.jsx)(s.pre,{language:"js",code:"// First import the library and give it a namespace.\n// import faiyaz7283/printer/<latest-version> as p\n\n// Always create printer under the `barstate.islast` condition. \nif barstate.islast\n\n  // Do not assign with `var`. \n  // Use the recommended printer() function to initialize the printer object.\n  printer = p.printer()\n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// First import the library and give it a namespace.</span></span>\n<span><span style="color: var(--shiki-token-comment)">// import faiyaz7283/printer/&lt;latest-version&gt; as p</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Always create printer under the `barstate.islast` condition. </span></span>\n<span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">barstate</span><span style="color: var(--shiki-color-text)">.islast</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// Do not assign with `var`. </span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// Use the recommended printer() function to initialize the printer object.</span></span>\n<span><span style="color: var(--shiki-color-text)">  printer </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.printer</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span></span>'}),title:"Creating a printer object"}),"\n",(0,o.jsxs)(s.p,{children:["Below we will go through all the available methods and some examples of how to use them. All the\nexamples below assumes we already have a ",(0,o.jsx)(s.a,{href:"/_printer#printer",children:(0,o.jsx)(s.code,{children:"printer"})})," object created."]}),"\n",(0,o.jsx)(t,{children:(0,o.jsx)(s.p,{children:"It is recommended to use methods instead of directly interacting with the printer properties.\nDirect interaction with certain properties will cause unintended behavior."})}),"\n",(0,o.jsx)(s.h2,{id:"printer",children:"printer()"}),"\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.a,{href:"_printer#printer",children:(0,o.jsx)(s.code,{children:"printer()"})}),": Create a new printer object."]}),"\n",(0,o.jsx)(s.pre,{language:"js",code:"// For quick initialization, just call the printer method. It will use all default values.\nprinter = p.printer()\n\n// To customize the printer with all available options.\nprinter = printer(\n  header = 'A header string for display.',\n  footer = 'A footer string for display.',\n  stack = true,\n  loc = position.top_right,\n  tableStyle = tableStyle.new(frameColor = color.white, frameWidth = 1),\n  headerStyle = headerStyle.new(textSize = size.large),\n  footerStyle = footerStyle.new(textHalign = text.align_right, textSize = size.small),\n  titleStyle = titleStyle.new(top = false, textHalign = text.align_center),\n  keyCellStyle = cellStyle.new(),\n  cellStyle = cellStyle.new(textHalign = text.align_right),\n  gutterStyle = gutterStyle.new(gutter = true),\n  theme = 'purple',\n  debug = false)\n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// For quick initialization, just call the printer method. It will use all default values.</span></span>\n<span><span style="color: var(--shiki-color-text)">printer </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.printer</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// To customize the printer with all available options.</span></span>\n<span><span style="color: var(--shiki-color-text)">printer </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">printer</span><span style="color: var(--shiki-color-text)">(</span></span>\n<span><span style="color: var(--shiki-color-text)">  header </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;A header string for display.&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">  footer </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;A footer string for display.&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">  stack </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">  loc </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)">.top_right</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">  tableStyle </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tableStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(frameColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-color-text)">.white</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> frameWidth </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">  headerStyle </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">headerStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(textSize </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">size</span><span style="color: var(--shiki-color-text)">.large)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">  footerStyle </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">footerStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(textHalign </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">text</span><span style="color: var(--shiki-color-text)">.align_right</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> textSize </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">size</span><span style="color: var(--shiki-color-text)">.small)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">  titleStyle </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">titleStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(top </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> textHalign </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">text</span><span style="color: var(--shiki-color-text)">.align_center)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">  keyCellStyle </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">cellStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">  cellStyle </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">cellStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(textHalign </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">text</span><span style="color: var(--shiki-color-text)">.align_right)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">  gutterStyle </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">gutterStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(gutter </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">  theme </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;purple&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">  debug </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(s.h2,{id:"cell",children:"cell()"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"/_printer#cell",children:(0,o.jsx)(s.code,{children:"cell()"})}),": Used for changing the orientation of arrays to horizontal."]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"/_printer#cell-2",children:(0,o.jsx)(s.code,{children:"cell()"})}),": Used for setting a custom ",(0,o.jsx)(s.a,{href:"/styles#cell-style",children:(0,o.jsx)(s.code,{children:"cellStyle"})}),"."]}),"\n",(0,o.jsxs)(s.li,{children:["The last example assumes we already have a variable called ",(0,o.jsx)(s.code,{children:"customCellStyle"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(e,{children:[(0,o.jsx)(s.pre,{language:"js",code:"// For printing arrays vertically, set horizontal to false (default).\nprinter.cell(horizontal=false) \n\n// For printing arrays horizontally, set horizontal to true.\nprinter.cell(horizontal=true) \n\n// Set a cellStyle.\nprinter.cell(cellStyle=customCellStyle) \n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// For printing arrays vertically, set horizontal to false (default).</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.cell</span><span style="color: var(--shiki-color-text)">(horizontal</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// For printing arrays horizontally, set horizontal to true.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.cell</span><span style="color: var(--shiki-color-text)">(horizontal</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set a cellStyle.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.cell</span><span style="color: var(--shiki-color-text)">(cellStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">customCellStyle) </span></span>\n<span></span>'}),title:"Method"}),(0,o.jsx)(s.pre,{language:"js",code:"// For printing arrays vertically, set horizontal to false (default).\np.cell(printer, horizontal=false) \n\n// For printing arrays horizontally, set horizontal to true\np.cell(printer, horizontal=true) \n\n// Set a cellStyle.\np.cell(printer, cellStyle=customCellStyle) \n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// For printing arrays vertically, set horizontal to false (default).</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.cell</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> horizontal</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// For printing arrays horizontally, set horizontal to true</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.cell</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> horizontal</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set a cellStyle.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.cell</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> cellStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">customCellStyle) </span></span>\n<span></span>'}),title:"Function"})]}),"\n",(0,o.jsx)(s.h2,{id:"debug",children:"debug()"}),"\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.a,{href:"_printer#debug",children:(0,o.jsx)(s.code,{children:"debug()"})}),": When set to true, adds helpful debugging information to the tooltip."]}),"\n",(0,o.jsxs)(e,{children:[(0,o.jsx)(s.pre,{language:"js",code:"// Turn on debugger.\nprinter.debug(true) \n\n// Turn off debugger (default).\nprinter.debug(false) \n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Turn on debugger.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.debug</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Turn off debugger (default).</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.debug</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>'}),title:"Method"}),(0,o.jsx)(s.pre,{language:"js",code:"// Turn on debugger.\np.debug(printer, true) \n\n// Turn off debugger (default).\np.debug(printer, false) \n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Turn on debugger.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.debug</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Turn off debugger (default).</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.debug</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>'}),title:"Function"})]}),"\n",(0,o.jsx)(s.h2,{id:"footer",children:"footer()"}),"\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.a,{href:"_printer#footer",children:(0,o.jsx)(s.code,{children:"footer()"})}),": Used to set a footer text and ",(0,o.jsx)(s.a,{href:"/styles#footer-style",children:(0,o.jsx)(s.code,{children:"footerStyle"})}),".\nThe example assumes we already have a variable called customFooterStyle."]}),"\n",(0,o.jsxs)(e,{children:[(0,o.jsx)(s.pre,{language:"js",code:'// Set footer text and style.\nprinter.footer("Some footer", footerStyle=customFooterStyle) \n',children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Set footer text and style.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.footer</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;Some footer&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> footerStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">customFooterStyle) </span></span>\n<span></span>'}),title:"Method"}),(0,o.jsx)(s.pre,{language:"js",code:'// Set footer text and style.\np.footer(printer, "Some footer", footerStyle=customFooterStyle) \n',children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Set footer text and style.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.footer</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;Some footer&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> footerStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">customFooterStyle) </span></span>\n<span></span>'}),title:"Function"})]}),"\n",(0,o.jsx)(s.h2,{id:"gutter",children:"gutter()"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"_printer#gutter",children:(0,o.jsx)(s.code,{children:"gutter()"})}),": Used for adding a gutter space between each ",(0,o.jsx)(s.a,{href:"/_printer#print",children:(0,o.jsx)(s.code,{children:"print()"})})," statements."]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"_printer#gutter-2",children:(0,o.jsx)(s.code,{children:"gutter()"})}),": Used for setting a custom ",(0,o.jsx)(s.a,{href:"/styles#gutter-style",children:(0,o.jsx)(s.code,{children:"gutterStyle"})}),"."]}),"\n",(0,o.jsxs)(s.li,{children:["The last example assumes we already have a variable called ",(0,o.jsx)(s.code,{children:"customGutterStyle"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(e,{children:[(0,o.jsx)(s.pre,{language:"js",code:"// Set gutter on (default).\nprinter.gutter(true) \n\n// Set gutter off.\nprinter.gutter(false) \n\n// Set a gutterStyle.\nprinter.gutter(gutterStyle=customGutterStyle) \n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Set gutter on (default).</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.gutter</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set gutter off.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.gutter</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set a gutterStyle.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.gutter</span><span style="color: var(--shiki-color-text)">(gutterStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">customGutterStyle) </span></span>\n<span></span>'}),title:"Method"}),(0,o.jsx)(s.pre,{language:"js",code:"// Set gutter on (default).\np.gutter(printer, true) \n\n// Set gutter off.\np.gutter(printer, false) \n\n// Set a gutterStyle.\np.gutter(printer, gutterStyle=customGutterStyle) \n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Set gutter on (default).</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.gutter</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set gutter off.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.gutter</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set a gutterStyle.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.gutter</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> gutterStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">customGutterStyle) </span></span>\n<span></span>'}),title:"Function"})]}),"\n",(0,o.jsx)(s.h2,{id:"header",children:"header()"}),"\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.a,{href:"_printer#header",children:(0,o.jsx)(s.code,{children:"header()"})}),": Used for setting a header text and ",(0,o.jsx)(s.a,{href:"/styles#header-style",children:(0,o.jsx)(s.code,{children:"headerStyle"})}),".\nThe example assumes we already have a variable called customHeaderStyle."]}),"\n",(0,o.jsxs)(e,{children:[(0,o.jsx)(s.pre,{language:"js",code:'// Set header text and style.\nprinter.header("Some header", headerStyle=customHeaderStyle) \n',children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Set header text and style.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.header</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;Some header&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> headerStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">customHeaderStyle) </span></span>\n<span></span>'}),title:"Method"}),(0,o.jsx)(s.pre,{language:"js",code:'// Set header text and style.\np.header(printer, "Some header", headerStyle=customHeaderStyle) \n',children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Set header text and style.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.header</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;Some header&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> headerStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">customHeaderStyle) </span></span>\n<span></span>'}),title:"Function"})]}),"\n",(0,o.jsx)(s.h2,{id:"print",children:"print()"}),"\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.a,{href:"_printer#print",children:(0,o.jsx)(s.code,{children:"print()"})}),": Outputs data onto the screen. Some of the examples below assumes we already\nhave the variables called customTitleStyle and customCellStyle."]}),"\n",(0,o.jsxs)(e,{children:[(0,o.jsx)(s.pre,{language:"js",code:'// Printing: Basic types.\n\n// string\nstr  = tools._rndmString()\nprinter.print(str)\n\n// float\nflt  = tools._rndmFloat()\nprinter.print(flt)\n\n// int\nint  = tools._rndmInt()\nprinter.print(int)\n\n// bool\nbool = tools._rndmBool()\nprinter.print(bool)\n\n// color\nclr  = tools._rndmColor()\nprinter.print(clr)\n\n//-----------------------------------\n\n// Printing: Arrays.\n\n// array<string>\nstrArr  = tools._rndmStringArray()\nprinter.print(strArr)\n\n// array<float>\nfltArr  = tools._rndmFloatArray()\nprinter.print(fltArr)\n\n// array<int>\nintArr  = tools._rndmIntArray()\nprinter.print(intArr)\n\n// array<bool>\nboolArr = tools._rndmBoolArray()\nprinter.print(boolArr)\n\n// array<color>\nclrArr  = tools._rndmColorArray()\nprinter.print(clrArr)\n\n//-----------------------------------\n\n// Printing: Matrix.\n\n// matrix<string>\nstrMtx  = tools._rndmStringMatrix()\nprinter.print(strMtx)\n\n// matrix<float>\nfltMtx  = tools._rndmFloatMatrix()\nprinter.print(fltMtx)\n\n// matrix<int>\nintMtx  = tools._rndmIntMatrix()\nprinter.print(intMtx)\n\n// matrix<bool>\nboolMtx = tools._rndmBoolMatrix()\nprinter.print(boolMtx)\n\n// matrix<color>\nclrMtx  = tools._rndmColorMatrix()\nprinter.print(clrMtx)\n\n//-----------------------------------\n\n// Printing: Title.\n\n// Add a title.\nprinter.print(tools._rndmFloatArray(), title="Random float array")\n\n// Change the orientation of title.\n// Changing orientation for all titles.\nprinter.title(top=false)\nprinter.print(tools._rndmFloatArray(), title="Random float array")\nprinter.print(tools._rndmSentence(), title="Random sentence")\nprinter.print(tools._rndmFloatMatrix(), title="Random float matrix")\n\n// Changing orientation for single title.\nts = titleStyle.copy(printer.titleStyle)\nts.top := false\nprinter.print(tools._rndmFloatArray(), title="Random float array", titleStyle=ts) // Will be changed.\nprinter.print(tools._rndmSentence(), title="Random sentence") // Back to default orientation.\nprinter.print(tools._rndmFloatMatrix(), title="Random float matrix") // Back to default orientation.\n\n//-----------------------------------\n\n// Printing: Styles.\n\n// Add custom titleStyle and cellStyle to print method.\nprinter.print(tools._rndmFloatArray(), title="Random float array", titleStyle=customTitleStyle) // Custom titleStyle.\nprinter.print(tools._rndmSentence(), title="Random sentence", cellStyle=customCellStyle)  // Custom cellStyle.\nprinter.print(tools._rndmFloatMatrix(), title="Random float matrix", titleStyle=customTitleStyle, cellStyle=customCellStyle) // Both custom styles.\nprinter.print(tools._rndmIntArray(), title="Random integer array") // Back to default styles.\n',children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Printing: Basic types.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// string</span></span>\n<span><span style="color: var(--shiki-color-text)">str  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmString</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(str)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// float</span></span>\n<span><span style="color: var(--shiki-color-text)">flt  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloat</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(flt)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// int</span></span>\n<span><span style="color: var(--shiki-color-text)">int  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmInt</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(int)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// bool</span></span>\n<span><span style="color: var(--shiki-color-text)">bool </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmBool</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(bool)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// color</span></span>\n<span><span style="color: var(--shiki-color-text)">clr  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmColor</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(clr)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">//-----------------------------------</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Printing: Arrays.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// array&lt;string&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">strArr  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmStringArray</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(strArr)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// array&lt;float&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">fltArr  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatArray</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(fltArr)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// array&lt;int&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">intArr  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmIntArray</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(intArr)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// array&lt;bool&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">boolArr </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmBoolArray</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(boolArr)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// array&lt;color&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">clrArr  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmColorArray</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(clrArr)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">//-----------------------------------</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Printing: Matrix.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// matrix&lt;string&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">strMtx  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmStringMatrix</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(strMtx)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// matrix&lt;float&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">fltMtx  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatMatrix</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(fltMtx)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// matrix&lt;int&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">intMtx  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmIntMatrix</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(intMtx)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// matrix&lt;bool&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">boolMtx </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmBoolMatrix</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(boolMtx)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// matrix&lt;color&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">clrMtx  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmColorMatrix</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(clrMtx)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">//-----------------------------------</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Printing: Title.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Add a title.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatArray</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random float array&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Change the orientation of title.</span></span>\n<span><span style="color: var(--shiki-token-comment)">// Changing orientation for all titles.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.title</span><span style="color: var(--shiki-color-text)">(top</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatArray</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random float array&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmSentence</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random sentence&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatMatrix</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random float matrix&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Changing orientation for single title.</span></span>\n<span><span style="color: var(--shiki-color-text)">ts </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">titleStyle</span><span style="color: var(--shiki-token-function)">.copy</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-color-text)">.titleStyle)</span></span>\n<span><span style="color: var(--shiki-token-constant)">ts</span><span style="color: var(--shiki-color-text)">.top :</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatArray</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random float array&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> titleStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">ts) </span><span style="color: var(--shiki-token-comment)">// Will be changed.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmSentence</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random sentence&quot;</span><span style="color: var(--shiki-color-text)">) </span><span style="color: var(--shiki-token-comment)">// Back to default orientation.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatMatrix</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random float matrix&quot;</span><span style="color: var(--shiki-color-text)">) </span><span style="color: var(--shiki-token-comment)">// Back to default orientation.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">//-----------------------------------</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Printing: Styles.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Add custom titleStyle and cellStyle to print method.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatArray</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random float array&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> titleStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">customTitleStyle) </span><span style="color: var(--shiki-token-comment)">// Custom titleStyle.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmSentence</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random sentence&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> cellStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">customCellStyle)  </span><span style="color: var(--shiki-token-comment)">// Custom cellStyle.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatMatrix</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random float matrix&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> titleStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">customTitleStyle</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> cellStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">customCellStyle) </span><span style="color: var(--shiki-token-comment)">// Both custom styles.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmIntArray</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random integer array&quot;</span><span style="color: var(--shiki-color-text)">) </span><span style="color: var(--shiki-token-comment)">// Back to default styles.</span></span>\n<span></span>'}),title:"Method"}),(0,o.jsx)(s.pre,{language:"js",code:'// Printing: Basic types.\n\n// string\nstr  = tools._rndmString()\np.print(printer, str)\n\n// float\nflt  = tools._rndmFloat()\np.print(printer, flt)\n\n// int\nint  = tools._rndmInt()\np.print(printer, int)\n\n// bool\nbool = tools._rndmBool()\np.print(printer, bool)\n\n// color\nclr  = tools._rndmColor()\np.print(printer, clr)\n\n//-----------------------------------\n\n// Printing: Arrays.\n\n// array<string>\nstrArr  = tools._rndmStringArray()\np.print(printer, strArr)\n\n// array<float>\nfltArr  = tools._rndmFloatArray()\np.print(printer, fltArr)\n\n// array<int>\nintArr  = tools._rndmIntArray()\np.print(printer, intArr)\n\n// array<bool>\nboolArr = tools._rndmBoolArray()\np.print(printer, boolArr)\n\n// array<color>\nclrArr  = tools._rndmColorArray()\np.print(printer, clrArr)\n\n//-----------------------------------\n\n// Printing: Matrix.\n\n// matrix<string>\nstrMtx  = tools._rndmStringMatrix()\np.print(printer, strMtx)\n\n// matrix<float>\nfltMtx  = tools._rndmFloatMatrix()\np.print(printer, fltMtx)\n\n// matrix<int>\nintMtx  = tools._rndmIntMatrix()\np.print(printer, intMtx)\n\n// matrix<bool>\nboolMtx = tools._rndmBoolMatrix()\np.print(printer, boolMtx)\n\n// matrix<color>\nclrMtx  = tools._rndmColorMatrix()\np.print(printer, clrMtx)\n\n//-----------------------------------\n\n// Printing: Title.\n\n// Add a title.\np.print(printer, tools._rndmFloatArray(), title="Random float array")\n\n// Change the orientation of title.\n// Changing orientation for all titles.\np.title(printer, top=false)\np.print(printer, tools._rndmFloatArray(), title="Random float array")\np.print(printer, tools._rndmSentence(), title="Random sentence")\np.print(printer, tools._rndmFloatMatrix(), title="Random float matrix")\n\n// Changing orientation for single title.\nts = p.titleStyle.copy(printer.titleStyle)\nts.top := false\np.print(printer, tools._rndmFloatArray(), title="Random float array", titleStyle=ts) // Will be changed.\np.print(printer, tools._rndmSentence(), title="Random sentence") // Back to default orientation.\np.print(printer, tools._rndmFloatMatrix(), title="Random float matrix") // Back to default orientation.\n\n//-----------------------------------\n\n// Printing: Styles.\n\n// Add custom titleStyle and cellStyle to print method.\np.print(printer, tools._rndmFloatArray(), title="Random float array", titleStyle=customTitleStyle) // Custom titleStyle.\np.print(printer, tools._rndmSentence(), title="Random sentence", cellStyle=customCellStyle)  // Custom cellStyle.\np.print(printer, tools._rndmFloatMatrix(), title="Random float matrix", titleStyle=customTitleStyle, cellStyle=customCellStyle) // Both custom styles.\np.print(printer, tools._rndmIntArray(), title="Random integer array") // Back to default styles.\n',children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Printing: Basic types.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// string</span></span>\n<span><span style="color: var(--shiki-color-text)">str  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmString</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> str)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// float</span></span>\n<span><span style="color: var(--shiki-color-text)">flt  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloat</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> flt)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// int</span></span>\n<span><span style="color: var(--shiki-color-text)">int  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmInt</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> int)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// bool</span></span>\n<span><span style="color: var(--shiki-color-text)">bool </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmBool</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> bool)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// color</span></span>\n<span><span style="color: var(--shiki-color-text)">clr  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmColor</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> clr)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">//-----------------------------------</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Printing: Arrays.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// array&lt;string&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">strArr  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmStringArray</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> strArr)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// array&lt;float&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">fltArr  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatArray</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> fltArr)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// array&lt;int&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">intArr  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmIntArray</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> intArr)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// array&lt;bool&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">boolArr </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmBoolArray</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> boolArr)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// array&lt;color&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">clrArr  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmColorArray</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> clrArr)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">//-----------------------------------</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Printing: Matrix.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// matrix&lt;string&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">strMtx  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmStringMatrix</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> strMtx)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// matrix&lt;float&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">fltMtx  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatMatrix</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> fltMtx)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// matrix&lt;int&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">intMtx  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmIntMatrix</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> intMtx)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// matrix&lt;bool&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">boolMtx </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmBoolMatrix</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> boolMtx)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// matrix&lt;color&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">clrMtx  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmColorMatrix</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> clrMtx)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">//-----------------------------------</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Printing: Title.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Add a title.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatArray</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random float array&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Change the orientation of title.</span></span>\n<span><span style="color: var(--shiki-token-comment)">// Changing orientation for all titles.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.title</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> top</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatArray</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random float array&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmSentence</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random sentence&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatMatrix</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random float matrix&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Changing orientation for single title.</span></span>\n<span><span style="color: var(--shiki-color-text)">ts </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">titleStyle</span><span style="color: var(--shiki-token-function)">.copy</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-color-text)">.titleStyle)</span></span>\n<span><span style="color: var(--shiki-token-constant)">ts</span><span style="color: var(--shiki-color-text)">.top :</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatArray</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random float array&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> titleStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">ts) </span><span style="color: var(--shiki-token-comment)">// Will be changed.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmSentence</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random sentence&quot;</span><span style="color: var(--shiki-color-text)">) </span><span style="color: var(--shiki-token-comment)">// Back to default orientation.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatMatrix</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random float matrix&quot;</span><span style="color: var(--shiki-color-text)">) </span><span style="color: var(--shiki-token-comment)">// Back to default orientation.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">//-----------------------------------</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Printing: Styles.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Add custom titleStyle and cellStyle to print method.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatArray</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random float array&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> titleStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">customTitleStyle) </span><span style="color: var(--shiki-token-comment)">// Custom titleStyle.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmSentence</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random sentence&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> cellStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">customCellStyle)  </span><span style="color: var(--shiki-token-comment)">// Custom cellStyle.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmFloatMatrix</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random float matrix&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> titleStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">customTitleStyle</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> cellStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">customCellStyle) </span><span style="color: var(--shiki-token-comment)">// Both custom styles.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tools</span><span style="color: var(--shiki-token-function)">._rndmIntArray</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Random integer array&quot;</span><span style="color: var(--shiki-color-text)">) </span><span style="color: var(--shiki-token-comment)">// Back to default styles.</span></span>\n<span></span>'}),title:"Function"})]}),"\n",(0,o.jsx)(s.h2,{id:"stack",children:"stack()"}),"\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.a,{href:"_printer#stack",children:(0,o.jsx)(s.code,{children:"stack()"})}),": Used for changing the orientation of a ",(0,o.jsx)(s.a,{href:"/_printer#printer",children:(0,o.jsx)(s.code,{children:"printer"})})," object. By default, groups data and stacks it vertically.\nSetting this to false will print each group side by side."]}),"\n",(0,o.jsxs)(e,{children:[(0,o.jsx)(s.pre,{language:"js",code:"// Turn off stacking.\nprinter.stack(false) \n\n// Turn on stacking (default).\nprinter.stack(true) \n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Turn off stacking.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.stack</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Turn on stacking (default).</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.stack</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>'}),title:"Method"}),(0,o.jsx)(s.pre,{language:"js",code:"// Turn off stacking.\np.stack(printer, false) \n\n// Turn on stacking (default).\np.stack(printer, true) \n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Turn off stacking.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.stack</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Turn on stacking (default).</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.stack</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>'}),title:"Function"})]}),"\n",(0,o.jsx)(s.h2,{id:"theme",children:"theme()"}),"\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.a,{href:"_printer#theme",children:(0,o.jsx)(s.code,{children:"theme()"})}),": Used for adding a preset style combination to a ",(0,o.jsx)(s.a,{href:"/_printer#printer",children:(0,o.jsx)(s.code,{children:"printer"})})," object."]}),"\n",(0,o.jsxs)(e,{children:[(0,o.jsx)(s.pre,{language:"js",code:"// Available themes:\n// blue, gray (default), green, orange, pink, purple, red, white, yellow\n\n// Set 'blue' theme.\nprinter.theme(\"blue\")\n\n// Set 'gray' theme.\nprinter.theme(\"gray\")\n\n// Set 'green' theme.\nprinter.theme(\"green\")\n\n// Set 'orange' theme.\nprinter.theme(\"orange\")\n\n// Set 'pink' theme.\nprinter.theme(\"pink\")\n\n// Set 'purple' theme.\nprinter.theme(\"purple\")\n\n// Set 'red' theme.\nprinter.theme(\"red\")\n\n// Set 'white' theme.\nprinter.theme(\"white\")\n\n// Set 'yellow' theme.\nprinter.theme(\"yellow\")\n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Available themes:</span></span>\n<span><span style="color: var(--shiki-token-comment)">// blue, gray (default), green, orange, pink, purple, red, white, yellow</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set &#39;blue&#39; theme.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.theme</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;blue&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set &#39;gray&#39; theme.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.theme</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;gray&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set &#39;green&#39; theme.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.theme</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;green&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set &#39;orange&#39; theme.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.theme</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;orange&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set &#39;pink&#39; theme.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.theme</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;pink&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set &#39;purple&#39; theme.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.theme</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;purple&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set &#39;red&#39; theme.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.theme</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;red&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set &#39;white&#39; theme.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.theme</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;white&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set &#39;yellow&#39; theme.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.theme</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;yellow&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>'}),title:"Method"}),(0,o.jsx)(s.pre,{language:"js",code:"// Available themes: \n// blue, gray (default), green, orange, pink, purple, red, white, yellow\n\n// Set 'blue' theme.\np.theme(printer, \"blue\") \n\n// Set 'gray' theme.\np.theme(printer, \"gray\") \n\n// Set 'green' theme.\np.theme(printer, \"green\") \n\n// Set 'orange' theme.\np.theme(printer, \"orange\") \n\n// Set 'pink' theme.\np.theme(printer, \"pink\") \n\n// Set 'purple' theme.\np.theme(printer, \"purple\") \n\n// Set 'red' theme.\np.theme(printer, \"red\") \n\n// Set 'white' theme.\np.theme(printer, \"white\") \n\n// Set 'yellow' theme.\np.theme(printer, \"yellow\")\n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Available themes: </span></span>\n<span><span style="color: var(--shiki-token-comment)">// blue, gray (default), green, orange, pink, purple, red, white, yellow</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set &#39;blue&#39; theme.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.theme</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;blue&quot;</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set &#39;gray&#39; theme.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.theme</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;gray&quot;</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set &#39;green&#39; theme.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.theme</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;green&quot;</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set &#39;orange&#39; theme.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.theme</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;orange&quot;</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set &#39;pink&#39; theme.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.theme</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;pink&quot;</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set &#39;purple&#39; theme.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.theme</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;purple&quot;</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set &#39;red&#39; theme.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.theme</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;red&quot;</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set &#39;white&#39; theme.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.theme</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;white&quot;</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set &#39;yellow&#39; theme.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.theme</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;yellow&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>'}),title:"Function"})]}),"\n",(0,o.jsx)(s.h2,{id:"title",children:"title()"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"_printer#title",children:(0,o.jsx)(s.code,{children:"title()"})}),": Used for setting the position of of titles."]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"_printer#title-2",children:(0,o.jsx)(s.code,{children:"title()"})}),": Used for setting a custom ",(0,o.jsx)(s.a,{href:"/styles#title-style",children:(0,o.jsx)(s.code,{children:"titleStyle"})}),"."]}),"\n",(0,o.jsxs)(s.li,{children:["The last example assumes we already have a variable called ",(0,o.jsx)(s.code,{children:"customTitleStyle"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(e,{children:[(0,o.jsx)(s.pre,{language:"js",code:"// Place titles on top (default).\nprinter.title(top=true) \n\n// Place titles on left.\nprinter.title(top=false) \n\n// Set a titleStyle.\nprinter.title(titleStyle=customtitleStyle) \n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Place titles on top (default).</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.title</span><span style="color: var(--shiki-color-text)">(top</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Place titles on left.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.title</span><span style="color: var(--shiki-color-text)">(top</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set a titleStyle.</span></span>\n<span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.title</span><span style="color: var(--shiki-color-text)">(titleStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">customtitleStyle) </span></span>\n<span></span>'}),title:"Method"}),(0,o.jsx)(s.pre,{language:"js",code:"// Place titles on top (default).\np.title(printer, top=true) \n\n// Place titles on left.\np.title(printer, top=false) \n\n// Set a titleStyle.\np.title(printer, titleStyle=customtitleStyle) \n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Place titles on top (default).</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.title</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> top</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Place titles on left.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.title</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> top</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">) </span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Set a titleStyle.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.title</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> titleStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">customtitleStyle) </span></span>\n<span></span>'}),title:"Function"})]}),"\n",(0,o.jsx)(s.h2,{id:"advanced-techniques",children:"Advanced Techniques"}),"\n",(0,o.jsx)(s.p,{children:"Beyond simple printing and basic customization, the print method offers extensive options for cell coloring in various ways.\nYou can apply static coloring by customizing colors using the cellStyle object. For dynamic coloring based on values or conditions,\nyou can utilize the dynamicColor object within the cellStyle. Additionally, you have the flexibility to use separate dynamicValues\nfor color mapping. It's important to note that you can apply coloring to either the background or the text itself, providing a wide\nrange of possibilities for visual representation. Let's explore some example usages below."}),"\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"Example 1:"})," Let's say we have a string array containing these values: ",(0,o.jsx)(s.em,{children:"Win, Loss, Breakeven"}),". We would like to color ",(0,o.jsx)(s.em,{children:"Win"}),"\nwith green, ",(0,o.jsx)(s.em,{children:"Loss"})," with red, and ",(0,o.jsx)(s.em,{children:"Breakeven"})," with yellow."]}),"\n",(0,o.jsx)(s.pre,{language:"js",code:"// An example string array containing our conditional string values.\nconditionStringArr = array.from('Win', 'Win', 'Breakeven', 'Loss', 'Win', 'Breakeven', 'Loss')\n\n// Create a new cellStyle object or for convenience, grab a copy from the printer object.\ncs = p.cellStyle.copy(printer.cellStyle)\n\n// Setup the dynamicColor object and apply to cellStyle.dynamicColor.\ncs.dynamicColor := p.dynamicColor.new(\n  up = color.lime, // ............................... This is the color for 'up' condition.\n  down = color.red,  // ........................... This is the color for 'down' condition.\n  neutral = color.yellow,  // .................. This is the color for 'neutral' condition.\n  stringUp = 'Win',  // .......................... Set the string value for 'up' condition.\n  stringDown = 'Loss', // ...................... Set the string value for 'down' condition.\n  stringNeutral = 'Breakeven', // ........... Set the string value for 'neutral' condition.\n  offsetItem = 'bg', // Use 'bg' when targeting text. Use 'text' when targeting background.\n  offsetColor = color.black) // ........ Optionally, set a static color for the offsetItem.\n\n// Now just pass the string array, along with the custom cellStyle to the print method.\np.print(conditionStringArr, cellStyle = cs)\n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// An example string array containing our conditional string values.</span></span>\n<span><span style="color: var(--shiki-color-text)">conditionStringArr </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">array</span><span style="color: var(--shiki-token-function)">.from</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Win&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Win&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Breakeven&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Loss&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Win&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Breakeven&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Loss&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Create a new cellStyle object or for convenience, grab a copy from the printer object.</span></span>\n<span><span style="color: var(--shiki-color-text)">cs </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">cellStyle</span><span style="color: var(--shiki-token-function)">.copy</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-color-text)">.cellStyle)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Setup the dynamicColor object and apply to cellStyle.dynamicColor.</span></span>\n<span><span style="color: var(--shiki-token-constant)">cs</span><span style="color: var(--shiki-color-text)">.dynamicColor :</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">dynamicColor</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(</span></span>\n<span><span style="color: var(--shiki-color-text)">  up </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-color-text)">.lime</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// ............................... This is the color for &#39;up&#39; condition.</span></span>\n<span><span style="color: var(--shiki-color-text)">  down </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-color-text)">.red</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// ........................... This is the color for &#39;down&#39; condition.</span></span>\n<span><span style="color: var(--shiki-color-text)">  neutral </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-color-text)">.yellow</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// .................. This is the color for &#39;neutral&#39; condition.</span></span>\n<span><span style="color: var(--shiki-color-text)">  stringUp </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Win&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// .......................... Set the string value for &#39;up&#39; condition.</span></span>\n<span><span style="color: var(--shiki-color-text)">  stringDown </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Loss&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// ...................... Set the string value for &#39;down&#39; condition.</span></span>\n<span><span style="color: var(--shiki-color-text)">  stringNeutral </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Breakeven&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// ........... Set the string value for &#39;neutral&#39; condition.</span></span>\n<span><span style="color: var(--shiki-color-text)">  offsetItem </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;bg&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// Use &#39;bg&#39; when targeting text. Use &#39;text&#39; when targeting background.</span></span>\n<span><span style="color: var(--shiki-color-text)">  offsetColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-color-text)">.black) </span><span style="color: var(--shiki-token-comment)">// ........ Optionally, set a static color for the offsetItem.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Now just pass the string array, along with the custom cellStyle to the print method.</span></span>\n<span><span style="color: var(--shiki-token-constant)">p</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(conditionStringArr</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> cellStyle </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> cs)</span></span>\n<span></span>'})})]})}var r=!0;function l(n,s){throw Error("Expected "+(s?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}s.default=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,a.ah)(),n.components);return s?(0,o.jsx)(s,Object.assign({},n,{children:(0,o.jsx)(e,n)})):e(n)}}},function(n){n.O(0,[774,888,179],function(){return n(n.s=4815)}),_N_E=n.O()}]);