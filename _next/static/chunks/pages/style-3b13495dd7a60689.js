(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[472],{6891:function(s,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/style",function(){return t(6815)}])},6815:function(s,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return r}});var o=t(5893),a=t(1151);function e(s){let n=Object.assign({h1:"h1",p:"p",a:"a",code:"code",h2:"h2",pre:"pre",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,a.ah)(),s.components),{Note:t,CodeGroup:e}=n;return e||l("CodeGroup",!0),t||l("Note",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{children:"Style"}),"\n",(0,o.jsxs)(n.p,{children:["There are six style objects that can be used to target individual areas of the ",(0,o.jsx)(n.a,{href:"/_printer",children:(0,o.jsx)(n.code,{children:"_printer"})}),". These style\nobjects are pretty similar to styling table cells using the ",(0,o.jsx)(n.code,{children:"table.cell()"})," method."]}),"\n",(0,o.jsx)(t,{children:(0,o.jsxs)(n.p,{children:["For all the examples in this page, ",(0,o.jsx)(n.code,{children:"tl"})," is used as a namespace for the tools library.\nIf you are following along with the examples, please make sure to import the latest\nversion of the library in your script first, and assign ",(0,o.jsx)(n.code,{children:"tl"})," as namespace."]})}),"\n",(0,o.jsx)(n.h2,{id:"table",children:"Table"}),"\n",(0,o.jsxs)(n.p,{children:["Use the ",(0,o.jsx)(n.a,{href:"/tableStyle",children:(0,o.jsx)(n.code,{children:"tableStyle"})})," object to style the internal table. Since there is no dedicated\nmethod for setting ",(0,o.jsx)(n.a,{href:"/tableStyle",children:(0,o.jsx)(n.code,{children:"tableStyle"})}),", direct assignment is fine."]}),"\n",(0,o.jsxs)(e,{children:[(0,o.jsx)(n.pre,{language:"js",code:'// Create a custom tableStyle object.\nvar tbs = tl.tableStyle.new(\n             bgColor = tl._color("white_medium"),\n             frameColor = tl._color("red_dark"),\n             frameWidth = 2,\n             borderColor = tl._color("red_bright"),\n             borderWidth = 2)\n\nif barstate.islast\n    // Create a printer with the custom tableStyle.\n    printer = tl._printer.new(tableStyle=tbs)\n\n    // Print something.\n    printer.print(tl._rndmStringMatrix(rows=2, columns=2))\n',children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Create a custom tableStyle object.</span></span>\n<span><span style="color: var(--shiki-token-keyword)">var</span><span style="color: var(--shiki-color-text)"> tbs </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">tableStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(</span></span>\n<span><span style="color: var(--shiki-color-text)">             bgColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;white_medium&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">             frameColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;red_dark&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">             frameWidth </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">             borderColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;red_bright&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">             borderWidth </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">barstate</span><span style="color: var(--shiki-color-text)">.islast</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Create a printer with the custom tableStyle.</span></span>\n<span><span style="color: var(--shiki-color-text)">    printer </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">_printer</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(tableStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">tbs)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Print something.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmStringMatrix</span><span style="color: var(--shiki-color-text)">(rows</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> columns</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-color-text)">))</span></span>\n<span></span>'}),title:"Method"}),(0,o.jsx)(n.pre,{language:"js",code:'// Create a custom headerStyle object.\nvar tbs = tl.tableStyle.new(\n             bgColor = tl._color("white_medium"),\n             frameColor = tl._color("red_dark"),\n             frameWidth = 2,\n             borderColor = tl._color("red_bright"),\n             borderWidth = 2)\n\nif barstate.islast\n    // Create a printer with the custom tableStyle.\n    printer = tl._printer.new(tableStyle=tbs)\n\n    // Print something. \n    tl.print(printer, tl._rndmStringMatrix(rows=2, columns=2))\n',children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Create a custom headerStyle object.</span></span>\n<span><span style="color: var(--shiki-token-keyword)">var</span><span style="color: var(--shiki-color-text)"> tbs </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">tableStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(</span></span>\n<span><span style="color: var(--shiki-color-text)">             bgColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;white_medium&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">             frameColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;red_dark&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">             frameWidth </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">             borderColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;red_bright&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">             borderWidth </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">barstate</span><span style="color: var(--shiki-color-text)">.islast</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Create a printer with the custom tableStyle.</span></span>\n<span><span style="color: var(--shiki-color-text)">    printer </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">_printer</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(tableStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">tbs)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Print something. </span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmStringMatrix</span><span style="color: var(--shiki-color-text)">(rows</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> columns</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-color-text)">))</span></span>\n<span></span>'}),title:"Function"})]}),"\n",(0,o.jsx)(n.h2,{id:"header",children:"Header"}),"\n",(0,o.jsxs)(n.p,{children:["Use the ",(0,o.jsx)(n.a,{href:"/headerStyle",children:(0,o.jsx)(n.code,{children:"headerStyle"})})," object to style the header cell. To add a\n",(0,o.jsx)(n.a,{href:"/headerStyle",children:(0,o.jsx)(n.code,{children:"headerStyle"})}),", use the ",(0,o.jsx)(n.a,{href:"#",children:(0,o.jsx)(n.code,{children:"header()"})})," method."]}),"\n",(0,o.jsxs)(e,{children:[(0,o.jsx)(n.pre,{language:"js",code:'// Create a custom headerStyle object.\nvar hs = tl.headerStyle.new(\n           width = 0, \n           height = 5, \n           textHalign = text.align_left, \n           textValign = text.align_center, \n           textColor = tl._color("purple_bright"), \n           textSize = size.large, \n           bgColor = tl._color("blue_dark"), \n           textFontFamily = font.family_default, \n           format = "HEADER: {0}")\n\nif barstate.islast\n    // Create a printer object.\n    printer = tl._printer.new()\n\n    // Connect the style to the printer, using header().\n    printer.header(val="Header with custom styling", headerStyle=hs)\n\n    // Print something.\n    printer.print("Testing custom headerStyle")\n',children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Create a custom headerStyle object.</span></span>\n<span><span style="color: var(--shiki-token-keyword)">var</span><span style="color: var(--shiki-color-text)"> hs </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">headerStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(</span></span>\n<span><span style="color: var(--shiki-color-text)">           width </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           height </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">5</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textHalign </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">text</span><span style="color: var(--shiki-color-text)">.align_left</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textValign </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">text</span><span style="color: var(--shiki-color-text)">.align_center</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;purple_bright&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textSize </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">size</span><span style="color: var(--shiki-color-text)">.large</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           bgColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;blue_dark&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textFontFamily </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">font</span><span style="color: var(--shiki-color-text)">.family_default</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           format </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;HEADER: {0}&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">barstate</span><span style="color: var(--shiki-color-text)">.islast</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Create a printer object.</span></span>\n<span><span style="color: var(--shiki-color-text)">    printer </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">_printer</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Connect the style to the printer, using header().</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.header</span><span style="color: var(--shiki-color-text)">(val</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Header with custom styling&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> headerStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">hs)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Print something.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;Testing custom headerStyle&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>'}),title:"Method"}),(0,o.jsx)(n.pre,{language:"js",code:'// Create a custom headerStyle object.\nvar hs = tl.headerStyle.new(\n           width = 0, \n           height = 5, \n           textHalign = text.align_left, \n           textValign = text.align_center, \n           textColor = tl._color("purple_bright"), \n           textSize = size.large, \n           bgColor = tl._color("blue_dark"), \n           textFontFamily = font.family_default, \n           format = "HEADER: {0}")\n\nif barstate.islast\n    // Create a printer object.\n    printer = tl._printer.new()\n\n    // Connect the style to the printer, using header().\n    tl.header(printer, val="Header with custom styling", headerStyle=hs)\n\n    // Print something.\n    tl.print(printer, "Testing custom headerStyle")\n',children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Create a custom headerStyle object.</span></span>\n<span><span style="color: var(--shiki-token-keyword)">var</span><span style="color: var(--shiki-color-text)"> hs </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">headerStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(</span></span>\n<span><span style="color: var(--shiki-color-text)">           width </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           height </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">5</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textHalign </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">text</span><span style="color: var(--shiki-color-text)">.align_left</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textValign </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">text</span><span style="color: var(--shiki-color-text)">.align_center</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;purple_bright&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textSize </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">size</span><span style="color: var(--shiki-color-text)">.large</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           bgColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;blue_dark&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textFontFamily </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">font</span><span style="color: var(--shiki-color-text)">.family_default</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           format </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;HEADER: {0}&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">barstate</span><span style="color: var(--shiki-color-text)">.islast</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Create a printer object.</span></span>\n<span><span style="color: var(--shiki-color-text)">    printer </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">_printer</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Connect the style to the printer, using header().</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.header</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> val</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Header with custom styling&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> headerStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">hs)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Print something.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;Testing custom headerStyle&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>'}),title:"Function"})]}),"\n",(0,o.jsx)(n.h2,{id:"footer",children:"Footer"}),"\n",(0,o.jsxs)(n.p,{children:["Use the ",(0,o.jsx)(n.a,{href:"/footerStyle",children:(0,o.jsx)(n.code,{children:"footerStyle"})})," object to style the footer cell. To add a\n",(0,o.jsx)(n.a,{href:"/footerStyle",children:(0,o.jsx)(n.code,{children:"footerStyle"})}),", use the ",(0,o.jsx)(n.a,{href:"#",children:(0,o.jsx)(n.code,{children:"footer()"})})," method."]}),"\n",(0,o.jsxs)(e,{children:[(0,o.jsx)(n.pre,{language:"js",code:'// Create a custom footerStyle object.\nvar fs = tl.footerStyle.new(\n           width = 0, \n           height = 5, \n           textHalign = text.align_left, \n           textValign = text.align_center, \n           textColor = tl.tl._color("purple_bright"), \n           textSize = size.large, \n           bgColor = tl.tl._color("blue_dark"), \n           textFontFamily = font.family_default, \n           format = "FOOTER: {0}")\n\nif barstate.islast\n    // Create a printer object.\n    printer = tl._printer.new()\n\n    // Connect the style to the printer, using footer().\n    printer.footer(val="Footer with custom styling", footerStyle=fs)\n\n    // Print something.\n    printer.print("Testing custom footerStyle")\n',children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Create a custom footerStyle object.</span></span>\n<span><span style="color: var(--shiki-token-keyword)">var</span><span style="color: var(--shiki-color-text)"> fs </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">footerStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(</span></span>\n<span><span style="color: var(--shiki-color-text)">           width </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           height </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">5</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textHalign </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">text</span><span style="color: var(--shiki-color-text)">.align_left</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textValign </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">text</span><span style="color: var(--shiki-color-text)">.align_center</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;purple_bright&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textSize </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">size</span><span style="color: var(--shiki-color-text)">.large</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           bgColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;blue_dark&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textFontFamily </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">font</span><span style="color: var(--shiki-color-text)">.family_default</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           format </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;FOOTER: {0}&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">barstate</span><span style="color: var(--shiki-color-text)">.islast</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Create a printer object.</span></span>\n<span><span style="color: var(--shiki-color-text)">    printer </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">_printer</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Connect the style to the printer, using footer().</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.footer</span><span style="color: var(--shiki-color-text)">(val</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Footer with custom styling&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> footerStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">fs)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Print something.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;Testing custom footerStyle&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>'}),title:"Method"}),(0,o.jsx)(n.pre,{language:"js",code:'// Create a custom footerStyle object.\nvar fs = tl.footerStyle.new(\n           width = 0, \n           height = 5, \n           textHalign = text.align_left, \n           textValign = text.align_center, \n           textColor = tl._color("purple_bright"), \n           textSize = size.large, \n           bgColor = tl._color("blue_dark"), \n           textFontFamily = font.family_default, \n           format = "FOOTER: {0}")\n\nif barstate.islast\n    // Create a printer object.\n    printer = tl._printer.new()\n\n    // Connect the style to the printer, using footer().\n    tl.footer(printer, val="Footer with custom styling", footerStyle=fs)\n\n    // Print something.\n    tl.print(printer, "Testing custom footerStyle")\n',children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Create a custom footerStyle object.</span></span>\n<span><span style="color: var(--shiki-token-keyword)">var</span><span style="color: var(--shiki-color-text)"> fs </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">footerStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(</span></span>\n<span><span style="color: var(--shiki-color-text)">           width </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           height </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">5</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textHalign </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">text</span><span style="color: var(--shiki-color-text)">.align_left</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textValign </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">text</span><span style="color: var(--shiki-color-text)">.align_center</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;purple_bright&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textSize </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">size</span><span style="color: var(--shiki-color-text)">.large</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           bgColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;blue_dark&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textFontFamily </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">font</span><span style="color: var(--shiki-color-text)">.family_default</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           format </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;FOOTER: {0}&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">barstate</span><span style="color: var(--shiki-color-text)">.islast</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Create a printer object.</span></span>\n<span><span style="color: var(--shiki-color-text)">    printer </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">_printer</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Connect the style to the printer, using footer().</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.footer</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> val</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Footer with custom styling&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> footerStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">fs)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Print something.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;Testing custom footerStyle&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>'}),title:"Function"})]}),"\n",(0,o.jsx)(n.h2,{id:"title-cells",children:"Title cells"}),"\n",(0,o.jsxs)(n.p,{children:["Use the ",(0,o.jsx)(n.a,{href:"/titleStyle",children:(0,o.jsx)(n.code,{children:"titleStyle"})})," object to style all title cells or individual ones.\nThere are couple of ways to add custom ",(0,o.jsx)(n.a,{href:"/titleStyle",children:(0,o.jsx)(n.code,{children:"titleStyle"})}),". We can use the\ndedicated ",(0,o.jsx)(n.a,{href:"#",children:(0,o.jsx)(n.code,{children:"title()"})})," method to target all titles, or pass it to the print method to\ntarget individual sets. Lets look at how to apply ",(0,o.jsx)(n.a,{href:"/titleStyle",children:(0,o.jsx)(n.code,{children:"titleStyle"})}),"."]}),"\n",(0,o.jsxs)(e,{children:[(0,o.jsx)(n.pre,{language:"js",code:'// Create a custom titleStyle object.\nvar ts = tl.titleStyle.new(\n           top = true,\n           width = 0, \n           height = 0, \n           textHalign = text.align_center, \n           textValign = text.align_top, \n           textColor = tl._color("green_light"), \n           textSize = size.normal, \n           bgColor = tl._color("blue_dark"), \n           textFontFamily = font.family_default, \n           format = "TITLE: {0}")\n\nif barstate.islast\n    // Create a printer object.\n    printer = tl._printer.new()\n\n    // Connect the style to the printer, using title().\n    printer.title(titleStyle=ts)\n\n    // First print will use the custom titleStyle, as passed thru the printer.\n    printer.print("First print", title="First title")\n\n    // Second print will use a new custom titleStyle passed directly to it.\n    printer.print("Second print", title="Second title", titleStyle=tl.titleStyle.new(top=false))\n',children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Create a custom titleStyle object.</span></span>\n<span><span style="color: var(--shiki-token-keyword)">var</span><span style="color: var(--shiki-color-text)"> ts </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">titleStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(</span></span>\n<span><span style="color: var(--shiki-color-text)">           top </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">           width </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           height </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textHalign </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">text</span><span style="color: var(--shiki-color-text)">.align_center</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textValign </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">text</span><span style="color: var(--shiki-color-text)">.align_top</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;green_light&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textSize </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">size</span><span style="color: var(--shiki-color-text)">.normal</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           bgColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;blue_dark&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textFontFamily </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">font</span><span style="color: var(--shiki-color-text)">.family_default</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           format </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;TITLE: {0}&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">barstate</span><span style="color: var(--shiki-color-text)">.islast</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Create a printer object.</span></span>\n<span><span style="color: var(--shiki-color-text)">    printer </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">_printer</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Connect the style to the printer, using title().</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.title</span><span style="color: var(--shiki-color-text)">(titleStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">ts)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// First print will use the custom titleStyle, as passed thru the printer.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;First print&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;First title&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Second print will use a new custom titleStyle passed directly to it.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;Second print&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Second title&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> titleStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">titleStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(top</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">))</span></span>\n<span></span>'}),title:"Method"}),(0,o.jsx)(n.pre,{language:"js",code:'// Create a custom titleStyle object.\nvar ts = tl.titleStyle.new(\n           top = true,\n           width = 0, \n           height = 0, \n           textHalign = text.align_center, \n           textValign = text.align_top, \n           textColor = tl._color("green_light"), \n           textSize = size.normal, \n           bgColor = tl._color("blue_dark"), \n           textFontFamily = font.family_default, \n           format = "TITLE: {0}")\n\nif barstate.islast\n    // Create a printer object.\n    printer = tl._printer.new()\n\n    // Connect the style to the printer, using title().\n    tl.title(printer, titleStyle=ts)\n\n    // First print will use the custom titleStyle, as passed thru the printer.\n    tl.print(printer, "First print", title="First title")\n\n    // Second print will use a new custom titleStyle passed directly to it.\n    tl.print(printer, "Second print", title="Second title", titleStyle=tl.titleStyle.new(top=false))\n',children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Create a custom titleStyle object.</span></span>\n<span><span style="color: var(--shiki-token-keyword)">var</span><span style="color: var(--shiki-color-text)"> ts </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">titleStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(</span></span>\n<span><span style="color: var(--shiki-color-text)">           top </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">           width </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           height </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textHalign </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">text</span><span style="color: var(--shiki-color-text)">.align_center</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textValign </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">text</span><span style="color: var(--shiki-color-text)">.align_top</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;green_light&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textSize </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">size</span><span style="color: var(--shiki-color-text)">.normal</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           bgColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;blue_dark&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textFontFamily </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">font</span><span style="color: var(--shiki-color-text)">.family_default</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           format </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;TITLE: {0}&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">barstate</span><span style="color: var(--shiki-color-text)">.islast</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Create a printer object.</span></span>\n<span><span style="color: var(--shiki-color-text)">    printer </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">_printer</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Connect the style to the printer, using title().</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.title</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> titleStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">ts)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// First print will use the custom titleStyle, as passed thru the printer.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;First print&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;First title&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Second print will use a new custom titleStyle passed directly to it.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;Second print&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Second title&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> titleStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">titleStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(top</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">))</span></span>\n<span></span>'}),title:"Function"})]}),"\n",(0,o.jsx)(n.h2,{id:"cells",children:"Cells"}),"\n",(0,o.jsxs)(n.p,{children:["Use the ",(0,o.jsx)(n.a,{href:"/cellStyle",children:(0,o.jsx)(n.code,{children:"cellStyle"})})," object to style all the regular data cells.\nThere are couple of ways to add custom ",(0,o.jsx)(n.a,{href:"/cellStyle",children:(0,o.jsx)(n.code,{children:"cellStyle"})}),". We can use\nthe dedicated ",(0,o.jsx)(n.a,{href:"#",children:(0,o.jsx)(n.code,{children:"cell()"})})," method to target all data cells, or pass it to the\nprint method to target individual sets. Lets look at how to apply ",(0,o.jsx)(n.a,{href:"/cellStyle",children:(0,o.jsx)(n.code,{children:"cellStyle"})}),"."]}),"\n",(0,o.jsxs)(e,{children:[(0,o.jsx)(n.pre,{language:"js",code:'// Create a custom cellStyle object.\nvar cs = tl.cellStyle.new(\n           horizontal = false,\n           width = 0, \n           height = 0, \n           textHalign = text.align_center, \n           textValign = text.align_top, \n           textColor = tl._color("green_light"), \n           textSize = size.normal, \n           bgColor = tl._color("blue_dark"), \n           textFontFamily = font.family_default,\n           format = "CELL: {0}")\n\n// Create a second cellStyle.\nvar cs2 = tl.cellStyle.copy(cs)\n\n// Change few things.\ncs2.horizontal := true\ncs2.bgColor := tl._color("purple_dark", 80)\ncs2.format := "Cell 2: {0}"\n\nif barstate.islast\n    // Create a printer object.\n    printer = tl._printer.new()\n\n    // Connect the style to the printer, using cell().\n    printer.cell(cellStyle=cs)\n\n    // Print something.\n    \n    // First print will use a custom cellStyle, as passed thru the printer.\n    printer.print(tl._rndmString())\n    \n    // Second print will use a new custom cellStyle passed directly to it.\n    printer.print(tl._rndmFloatArray(), cellStyle=cs2)\n    \n    // Third print will again fall back to the first set cellStyle.\n    printer.print(tl._rndmBoolArray())\n',children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Create a custom cellStyle object.</span></span>\n<span><span style="color: var(--shiki-token-keyword)">var</span><span style="color: var(--shiki-color-text)"> cs </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">cellStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(</span></span>\n<span><span style="color: var(--shiki-color-text)">           horizontal </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">           width </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           height </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textHalign </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">text</span><span style="color: var(--shiki-color-text)">.align_center</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textValign </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">text</span><span style="color: var(--shiki-color-text)">.align_top</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;green_light&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textSize </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">size</span><span style="color: var(--shiki-color-text)">.normal</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           bgColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;blue_dark&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textFontFamily </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">font</span><span style="color: var(--shiki-color-text)">.family_default</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">           format </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;CELL: {0}&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Create a second cellStyle.</span></span>\n<span><span style="color: var(--shiki-token-keyword)">var</span><span style="color: var(--shiki-color-text)"> cs2 </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">cellStyle</span><span style="color: var(--shiki-token-function)">.copy</span><span style="color: var(--shiki-color-text)">(cs)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Change few things.</span></span>\n<span><span style="color: var(--shiki-token-constant)">cs2</span><span style="color: var(--shiki-color-text)">.horizontal :</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span></span>\n<span><span style="color: var(--shiki-token-constant)">cs2</span><span style="color: var(--shiki-color-text)">.bgColor :</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;purple_dark&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">80</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-token-constant)">cs2</span><span style="color: var(--shiki-color-text)">.format :</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;Cell 2: {0}&quot;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">barstate</span><span style="color: var(--shiki-color-text)">.islast</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Create a printer object.</span></span>\n<span><span style="color: var(--shiki-color-text)">    printer </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">_printer</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Connect the style to the printer, using cell().</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.cell</span><span style="color: var(--shiki-color-text)">(cellStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">cs)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Print something.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// First print will use a custom cellStyle, as passed thru the printer.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmString</span><span style="color: var(--shiki-color-text)">())</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Second print will use a new custom cellStyle passed directly to it.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmFloatArray</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> cellStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">cs2)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Third print will again fall back to the first set cellStyle.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmBoolArray</span><span style="color: var(--shiki-color-text)">())</span></span>\n<span></span>'}),title:"Method"}),(0,o.jsx)(n.pre,{language:"js",code:'// Create a custom cellStyle object.\nvar cs = tl.cellStyle.new(\n           horizontal = false,\n           width = 0, \n           height = 0, \n           textHalign = text.align_center, \n           textValign = text.align_top, \n           textColor = tl._color("green_light"), \n           textSize = size.normal, \n           bgColor = tl._color("blue_dark"), \n           textFontFamily = font.family_default,\n           format = "CELL: {0}")\n\n// Create a second cellStyle.\nvar cs2 = tl.cellStyle.copy(cs)\n\n// Change few things.\ncs2.horizontal := true\ncs2.bgColor := tl._color("purple_dark", 80)\ncs2.format := "Cell 2: {0}"\n\nif barstate.islast\n    // Create a printer object.\n    printer = tl._printer.new()\n\n    // Connect the style to the printer, using cell().\n    cell(printer, cellStyle=cs)\n\n    // Print something.\n    \n    // First print will use a custom cellStyle, as passed thru the printer.\n    tl.print(printer, tl._rndmString())\n    \n    // Second print will use a new custom cellStyle passed directly to it.\n    tl.print(printer, tl._rndmFloatArray(), cellStyle=cs2)\n    \n    // Third print will again fall back to the first set cellStyle.\n    tl.print(printer, tl._rndmBoolArray())\n',children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Create a custom cellStyle object.</span></span>\n<span><span style="color: var(--shiki-token-keyword)">var</span><span style="color: var(--shiki-color-text)"> cs </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">cellStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(</span></span>\n<span><span style="color: var(--shiki-color-text)">           horizontal </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">           width </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           height </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textHalign </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">text</span><span style="color: var(--shiki-color-text)">.align_center</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textValign </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">text</span><span style="color: var(--shiki-color-text)">.align_top</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;green_light&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textSize </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">size</span><span style="color: var(--shiki-color-text)">.normal</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           bgColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;blue_dark&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           textFontFamily </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">font</span><span style="color: var(--shiki-color-text)">.family_default</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">           format </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;CELL: {0}&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Create a second cellStyle.</span></span>\n<span><span style="color: var(--shiki-token-keyword)">var</span><span style="color: var(--shiki-color-text)"> cs2 </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">cellStyle</span><span style="color: var(--shiki-token-function)">.copy</span><span style="color: var(--shiki-color-text)">(cs)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Change few things.</span></span>\n<span><span style="color: var(--shiki-token-constant)">cs2</span><span style="color: var(--shiki-color-text)">.horizontal :</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span></span>\n<span><span style="color: var(--shiki-token-constant)">cs2</span><span style="color: var(--shiki-color-text)">.bgColor :</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._color</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;purple_dark&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">80</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-token-constant)">cs2</span><span style="color: var(--shiki-color-text)">.format :</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;Cell 2: {0}&quot;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">barstate</span><span style="color: var(--shiki-color-text)">.islast</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Create a printer object.</span></span>\n<span><span style="color: var(--shiki-color-text)">    printer </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">_printer</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Connect the style to the printer, using cell().</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">cell</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> cellStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">cs)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Print something.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// First print will use a custom cellStyle, as passed thru the printer.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmString</span><span style="color: var(--shiki-color-text)">())</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Second print will use a new custom cellStyle passed directly to it.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmFloatArray</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> cellStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">cs2)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Third print will again fall back to the first set cellStyle.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmBoolArray</span><span style="color: var(--shiki-color-text)">())</span></span>\n<span></span>'}),title:"Function"})]}),"\n",(0,o.jsx)(n.h2,{id:"gutter-cells",children:"Gutter Cells"}),"\n",(0,o.jsxs)(n.p,{children:["Use the ",(0,o.jsx)(n.a,{href:"/gutterStyle",children:(0,o.jsx)(n.code,{children:"gutterStyle"})})," object to style all the gutter cells. To add a\n",(0,o.jsx)(n.a,{href:"/gutterStyle",children:(0,o.jsx)(n.code,{children:"gutterStyle"})}),", use the ",(0,o.jsx)(n.a,{href:"#",children:(0,o.jsx)(n.code,{children:"gutter()"})})," method."]}),"\n",(0,o.jsxs)(e,{children:[(0,o.jsx)(n.pre,{language:"js",code:"// Create a custom titleStyle object.\nvar gs = tl.gutterStyle.new(\n           gutter = true,\n           width = 2, \n           height = 2)\n\n// Add some frame and border to help see the gutter space better.\nvar tbs = tl.tableStyle.new(\n             frameColor = color.silver, \n             borderColor = color.silver, \n             borderWidth = 1)\n\nif barstate.islast\n    // Create a printer object.\n    printer = tl._printer.new(tableStyle=tbs)\n\n    // Connect the style to the printer, using cell().\n    printer.gutter(gutterStyle=gs)\n\n    // Print something.\n    printer.print(tl._rndmStringArray())\n    \n    // Add few more data sets to see the gutterStyle in action. \n    printer.print(tl._rndmFloatArray())\n    printer.print(tl._rndmIntMatrix())\n",children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Create a custom titleStyle object.</span></span>\n<span><span style="color: var(--shiki-token-keyword)">var</span><span style="color: var(--shiki-color-text)"> gs </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">gutterStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(</span></span>\n<span><span style="color: var(--shiki-color-text)">           gutter </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">           width </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           height </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Add some frame and border to help see the gutter space better.</span></span>\n<span><span style="color: var(--shiki-token-keyword)">var</span><span style="color: var(--shiki-color-text)"> tbs </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">tableStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(</span></span>\n<span><span style="color: var(--shiki-color-text)">             frameColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-color-text)">.silver</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">             borderColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-color-text)">.silver</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">             borderWidth </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">barstate</span><span style="color: var(--shiki-color-text)">.islast</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Create a printer object.</span></span>\n<span><span style="color: var(--shiki-color-text)">    printer </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">_printer</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(tableStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">tbs)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Connect the style to the printer, using cell().</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.gutter</span><span style="color: var(--shiki-color-text)">(gutterStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">gs)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Print something.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmStringArray</span><span style="color: var(--shiki-color-text)">())</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Add few more data sets to see the gutterStyle in action. </span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmFloatArray</span><span style="color: var(--shiki-color-text)">())</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmIntMatrix</span><span style="color: var(--shiki-color-text)">())</span></span>\n<span></span>'}),title:"Method"}),(0,o.jsx)(n.pre,{language:"js",code:"// Create a custom titleStyle object.\nvar gs = tl.gutterStyle.new(\n           gutter = true,\n           width = 2, \n           height = 2)\n\n// Add some frame and border to help see the gutter space better.\nvar tbs = tl.tableStyle.new(\n             frameColor = color.silver, \n             borderColor = color.silver, \n             borderWidth = 1)\n\nif barstate.islast\n    // Create a printer object.\n    printer = tl._printer.new(tableStyle=tbs)\n\n    // Connect the style to the printer, using cell().\n    tl.gutter(printer, gutterStyle=gs)\n\n    // Print something.\n    tl.print(printer, tl._rndmStringArray())\n    \n    // Add few more data sets to see the gutterStyle in action. \n    tl.print(printer, tl._rndmFloatArray())\n    tl.print(printer, tl._rndmIntMatrix())\n",children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// Create a custom titleStyle object.</span></span>\n<span><span style="color: var(--shiki-token-keyword)">var</span><span style="color: var(--shiki-color-text)"> gs </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">gutterStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(</span></span>\n<span><span style="color: var(--shiki-color-text)">           gutter </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">           width </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">           height </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">// Add some frame and border to help see the gutter space better.</span></span>\n<span><span style="color: var(--shiki-token-keyword)">var</span><span style="color: var(--shiki-color-text)"> tbs </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">tableStyle</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(</span></span>\n<span><span style="color: var(--shiki-color-text)">             frameColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-color-text)">.silver</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">             borderColor </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-color-text)">.silver</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span></span>\n<span><span style="color: var(--shiki-color-text)">             borderWidth </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">barstate</span><span style="color: var(--shiki-color-text)">.islast</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Create a printer object.</span></span>\n<span><span style="color: var(--shiki-color-text)">    printer </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">_printer</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">(tableStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">tbs)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Connect the style to the printer, using cell().</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.gutter</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> gutterStyle</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">gs)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Print something.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmStringArray</span><span style="color: var(--shiki-color-text)">())</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Add few more data sets to see the gutterStyle in action. </span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmFloatArray</span><span style="color: var(--shiki-color-text)">())</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmIntMatrix</span><span style="color: var(--shiki-color-text)">())</span></span>\n<span></span>'}),title:"Function"})]}),"\n",(0,o.jsx)(n.h2,{id:"themes",children:"Themes"}),"\n",(0,o.jsxs)(n.p,{children:["You can style the printer with a convenient ",(0,o.jsx)(n.a,{href:"/#",children:(0,o.jsx)(n.code,{children:"theme()"})})," method, which uses preset colors to create a color\ntheme. Below are all the current available themes with their color guides."]}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{align:"center"}),(0,o.jsx)(n.th,{align:"center",children:"Background color"}),(0,o.jsx)(n.th,{align:"center",children:"Frame color"}),(0,o.jsx)(n.th,{align:"center",children:"Cell text color"}),(0,o.jsx)(n.th,{align:"center",children:"Header/Footer/Title text color"}),(0,o.jsx)(n.th,{align:"center",children:"Title background color"}),(0,o.jsx)(n.th,{align:"center",children:"Header/Footer background color"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"center",children:"blue"}),(0,o.jsx)(n.td,{align:"center",children:"#0000780D"}),(0,o.jsx)(n.td,{align:"center",children:"#0000FFB3"}),(0,o.jsx)(n.td,{align:"center",children:"#00FFFF"}),(0,o.jsx)(n.td,{align:"center",children:"#E1E1E1"}),(0,o.jsx)(n.td,{align:"center",children:"#0078FF9E"}),(0,o.jsx)(n.td,{align:"center",children:"#0096FFA6"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"center",children:"gray"}),(0,o.jsx)(n.td,{align:"center",children:"#0000004D"}),(0,o.jsx)(n.td,{align:"center",children:"#3C4650B8"}),(0,o.jsx)(n.td,{align:"center",children:"#E14600"}),(0,o.jsx)(n.td,{align:"center",children:"#E1E1E1"}),(0,o.jsx)(n.td,{align:"center",children:"#1E283273"}),(0,o.jsx)(n.td,{align:"center",children:"#3C465078"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"center",children:"green"}),(0,o.jsx)(n.td,{align:"center",children:"#0078000D"}),(0,o.jsx)(n.td,{align:"center",children:"#00FF00B8"}),(0,o.jsx)(n.td,{align:"center",children:"#E1E1E1"}),(0,o.jsx)(n.td,{align:"center",children:"#000000"}),(0,o.jsx)(n.td,{align:"center",children:"#00C800D9"}),(0,o.jsx)(n.td,{align:"center",children:"#00FF00DE"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"center",children:"orange"}),(0,o.jsx)(n.td,{align:"center",children:"#E146000D"}),(0,o.jsx)(n.td,{align:"center",children:"#E16400B8"}),(0,o.jsx)(n.td,{align:"center",children:"#E1E1E1"}),(0,o.jsx)(n.td,{align:"center",children:"#000000"}),(0,o.jsx)(n.td,{align:"center",children:"#E14600D9"}),(0,o.jsx)(n.td,{align:"center",children:"#E16400DE"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"center",children:"pink"}),(0,o.jsx)(n.td,{align:"center",children:"#FF00FF0D"}),(0,o.jsx)(n.td,{align:"center",children:"#FF96FFB8"}),(0,o.jsx)(n.td,{align:"center",children:"#E1E1E1"}),(0,o.jsx)(n.td,{align:"center",children:"#000000"}),(0,o.jsx)(n.td,{align:"center",children:"#FF64FFD9"}),(0,o.jsx)(n.td,{align:"center",children:"#FF96FFDE"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"center",children:"purple"}),(0,o.jsx)(n.td,{align:"center",children:"#9B00FF0D"}),(0,o.jsx)(n.td,{align:"center",children:"#9696FFB8"}),(0,o.jsx)(n.td,{align:"center",children:"#E1E1E1"}),(0,o.jsx)(n.td,{align:"center",children:"#E1E1E1"}),(0,o.jsx)(n.td,{align:"center",children:"#9664FFD9"}),(0,o.jsx)(n.td,{align:"center",children:"#9696FFDE"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"center",children:"red"}),(0,o.jsx)(n.td,{align:"center",children:"#7800000D"}),(0,o.jsx)(n.td,{align:"center",children:"#FF0000B8"}),(0,o.jsx)(n.td,{align:"center",children:"#E1E1E1"}),(0,o.jsx)(n.td,{align:"center",children:"#E1E1E1"}),(0,o.jsx)(n.td,{align:"center",children:"#C80000D9"}),(0,o.jsx)(n.td,{align:"center",children:"#FF0000DE"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"center",children:"white"}),(0,o.jsx)(n.td,{align:"center",children:"#C8C8C80D"}),(0,o.jsx)(n.td,{align:"center",children:"#FFFFFFB8"}),(0,o.jsx)(n.td,{align:"center",children:"#E1E1E1"}),(0,o.jsx)(n.td,{align:"center",children:"#000000"}),(0,o.jsx)(n.td,{align:"center",children:"#C8C8C8D9"}),(0,o.jsx)(n.td,{align:"center",children:"#EBEBEBDE"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"center",children:"yellow"}),(0,o.jsx)(n.td,{align:"center",children:"#AFAF000D"}),(0,o.jsx)(n.td,{align:"center",children:"#FFFF00B8"}),(0,o.jsx)(n.td,{align:"center",children:"#E1E1E1"}),(0,o.jsx)(n.td,{align:"center",children:"#000000"}),(0,o.jsx)(n.td,{align:"center",children:"#E6E600D9"}),(0,o.jsx)(n.td,{align:"center",children:"#FFFF00DE"})]})]})]}),"\n",(0,o.jsxs)(n.p,{children:["There are couple of ways to set theme. We can use the dedicated ",(0,o.jsx)(n.a,{href:"#",children:(0,o.jsx)(n.code,{children:"theme()"})}),"\nmethod to target everything. We can also pass theme individually to each print method.\nLets see how we can do both."]}),"\n",(0,o.jsxs)(e,{children:[(0,o.jsx)(n.pre,{language:"js",code:'if barstate.islast\n    // Create a printer object.\n    printer = tl._printer.new()\n    printer.header("Header")\n    printer.footer("Footer")\n    \n    // Set the theme.\n    printer.theme("green")\n\n    // Print something.\n    printer.print(tl._rndmFloatArray(size=5), title="Green")\n\n    // Print another couple set of data, but give them their own themes.\n    printer.print(tl._rndmBoolMatrix(rows=3, columns=3), title="Orange", theme="orange")\n    printer.print(tl._rndmStringMatrix(rows=3, columns=3), title="Pink", theme="pink")\n\n    // Print another set of data, this one will fall back to the first theme.\n    printer.print(tl._rndmBoolArray(size=3), title="Green")\n',children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">barstate</span><span style="color: var(--shiki-color-text)">.islast</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Create a printer object.</span></span>\n<span><span style="color: var(--shiki-color-text)">    printer </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">_printer</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.header</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;Header&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.footer</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;Footer&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Set the theme.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.theme</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;green&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Print something.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmFloatArray</span><span style="color: var(--shiki-color-text)">(size</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">5</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Green&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Print another couple set of data, but give them their own themes.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmBoolMatrix</span><span style="color: var(--shiki-color-text)">(rows</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> columns</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Orange&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> theme</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;orange&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmStringMatrix</span><span style="color: var(--shiki-color-text)">(rows</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> columns</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Pink&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> theme</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;pink&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Print another set of data, this one will fall back to the first theme.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">printer</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmBoolArray</span><span style="color: var(--shiki-color-text)">(size</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Green&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>'}),title:"Method"}),(0,o.jsx)(n.pre,{language:"js",code:'if barstate.islast\n    // Create a printer object.\n    printer = tl._printer.new()\n    tl.header("Header")\n    tl.footer("Footer")\n\n    // Set the theme.\n    tl.theme(printer, "green")\n\n    // Print something.\n    tl.print(printer, tl._rndmFloatArray(size=5), title="Green")\n\n    // Print another couple set of data, but give them their own themes.\n    tl.print(printer, tl._rndmBoolMatrix(rows=3, columns=3), title="Orange", theme="orange")\n    tl.print(printer, tl._rndmStringMatrix(rows=3, columns=3), title="Pink", theme="pink")\n\n    // Print another set of data, this one will fall back to the first theme.\n    tl.print(printer, tl._rndmBoolArray(size=3), title="Green")\n',children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">barstate</span><span style="color: var(--shiki-color-text)">.islast</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Create a printer object.</span></span>\n<span><span style="color: var(--shiki-color-text)">    printer </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">_printer</span><span style="color: var(--shiki-token-function)">.new</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.header</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;Header&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.footer</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;Footer&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Set the theme.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.theme</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;green&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Print something.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmFloatArray</span><span style="color: var(--shiki-color-text)">(size</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">5</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Green&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Print another couple set of data, but give them their own themes.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmBoolMatrix</span><span style="color: var(--shiki-color-text)">(rows</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> columns</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Orange&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> theme</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;orange&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmStringMatrix</span><span style="color: var(--shiki-color-text)">(rows</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> columns</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Pink&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> theme</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;pink&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Print another set of data, this one will fall back to the first theme.</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">.print</span><span style="color: var(--shiki-color-text)">(printer</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tl</span><span style="color: var(--shiki-token-function)">._rndmBoolArray</span><span style="color: var(--shiki-color-text)">(size</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> title</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;Green&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>'}),title:"Function"})]})]})}var r=!0;function l(s,n){throw Error("Expected "+(n?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),s.components);return n?(0,o.jsx)(n,Object.assign({},s,{children:(0,o.jsx)(e,s)})):e(s)}}},function(s){s.O(0,[774,888,179],function(){return s(s.s=6891)}),_N_E=s.O()}]);